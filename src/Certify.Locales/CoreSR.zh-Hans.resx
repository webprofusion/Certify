<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ManagedCertificateType_LocalIIS" xml:space="preserve">
    <value>本地IIS，Let's Encrypt的证书</value>
  </data>
  <data name="ManagedCertificateType_Manual" xml:space="preserve">
    <value>手动绑定，Let's Encrypt的证书</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="CertifyManager_DomainValidationFailed" xml:space="preserve">
    <value>域名验证失败：{0} 
{1}</value>
  </data>
  <data name="CertifyManager_DomainValidationCompleted" xml:space="preserve">
    <value>域名认证完成：{0}</value>
  </data>
  <data name="CertifyManager_DomainValidationSkipVerifed" xml:space="preserve">
    <value>域名当前已经认证通过，跳过认证：{0}</value>
  </data>
  <data name="CertifyManager_RequestCertificate" xml:space="preserve">
    <value>正在申请证书</value>
  </data>
  <data name="CertifyManager_CompleteRequest" xml:space="preserve">
    <value>申请证书完成</value>
  </data>
  <data name="CertifyManager_CompleteRequestAndUpdateBinding" xml:space="preserve">
    <value>证书申请完成，IIS绑定已自动更新</value>
  </data>
  <data name="CertifyManager_CertificateInstalledAndBindingUpdated" xml:space="preserve">
    <value>证书申请完成，{0} 的IIS绑定已更新</value>
  </data>
  <data name="CertifyManager_CertificateInstallFailed" xml:space="preserve">
    <value>安装证书的时候发生错误，证书可能无效：{0}</value>
  </data>
  <data name="CertifyManager_CertificateCreatedForBinding" xml:space="preserve">
    <value>证书已可供手动绑定：{0}</value>
  </data>
  <data name="CertifyManager_LetsEncryptServiceTimeout" xml:space="preserve">
    <value>Let's Encrypt 服务未在指定的时间内颁发有效的证书。{0}</value>
  </data>
  <data name="CertifyManager_ValidationForChallengeNotSuccess" xml:space="preserve">
    <value>必须的验证未能成功完成。{0}</value>
  </data>
  <data name="CertifyManager_RequestFailed" xml:space="preserve">
    <value>{0}: 请求失败 - {1} {2}</value>
  </data>
  <data name="CertificateRequestWasAbortedByPSScript" xml:space="preserve">
    <value>证书申请被PS脚本中止</value>
  </data>
  <data name="CertifyManager_FailedPrerequisiteCheck" xml:space="preserve">
    <value>预置检查失败（{0}）</value>
  </data>
  <data name="CertifyManager_AutomateConfigurationCheckFailed_HTTP" xml:space="preserve">
    <value>自动配置检查失败，无法完成认证。检查您站点的HTTP绑定，请在继续前确认可以浏览 http://{0}/.well-known/acme-challenge/configcheck</value>
  </data>
  <data name="CertifyManager_AutomateConfigurationCheckFailed_SNI" xml:space="preserve">
    <value>自动配置检查失败，无法完成认证。请在继续签检查您站点的HTTPS SNI绑定（如  '0123456789ABCDEF0123456789ABCDEF.0123456789ABCDEF0123456789ABCDEF.acme.invalid'）</value>
  </data>
  <data name="CertifyManager_ReqestValidationFromLetsEncrypt" xml:space="preserve">
    <value>正在向Let's Encrype请求验证：{0}</value>
  </data>
  <data name="CertifyManager_AutoBinding" xml:space="preserve">
    <value>进行自动证书绑定</value>
  </data>
  <data name="CertifyManager_SkipRenewalOk" xml:space="preserve">
    <value>当前证书有效，跳过续期。</value>
  </data>
  <data name="CertifyManager_SiteStopped" xml:space="preserve">
    <value>站点已停止（或不存在），因域名验证无法继续所以跳过续期。</value>
  </data>
  <data name="CertifyManager_PerformingConfigTests" xml:space="preserve">
    <value>进行配置检查</value>
  </data>
  <data name="CertifyManager_RegisteringAndValidatingX0" xml:space="preserve">
    <value>注册并验证 {0}</value>
  </data>
  <data name="CertifyManager_PerformingChallengeResponseViaIISX0" xml:space="preserve">
    <value>通过IIS进行认证: {0}</value>
  </data>
  <data name="CertifyManager_RegisterDomainIdentity" xml:space="preserve">
    <value>注册域名标识符</value>
  </data>
  <data name="CertifyManager_RenewalOnHold" xml:space="preserve">
    <value>上次证书续期失败：{0}，将会在48小时内重试。</value>
  </data>
</root>